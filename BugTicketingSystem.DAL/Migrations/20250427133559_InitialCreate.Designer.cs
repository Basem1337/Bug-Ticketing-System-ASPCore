// <auto-generated />
using System;
using BugTicketingSystem.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BugTicketingSystem.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250427133559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BugTicketingSystem.DAL.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BugID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BugID");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Bug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("ProjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Risk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectID");

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.UserBug", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BugId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "BugId");

                    b.HasIndex("BugId");

                    b.ToTable("UserBugs");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Attachment", b =>
                {
                    b.HasOne("BugTicketingSystem.DAL.Bug", "Bugs")
                        .WithMany("Attachments")
                        .HasForeignKey("BugID");

                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Bug", b =>
                {
                    b.HasOne("BugTicketingSystem.DAL.Project", "Projects")
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectID");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.UserBug", b =>
                {
                    b.HasOne("BugTicketingSystem.DAL.Bug", "Bug")
                        .WithMany("UserBugs")
                        .HasForeignKey("BugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTicketingSystem.DAL.User", "User")
                        .WithMany("UserBugs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bug");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Bug", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("UserBugs");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.Project", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("BugTicketingSystem.DAL.User", b =>
                {
                    b.Navigation("UserBugs");
                });
#pragma warning restore 612, 618
        }
    }
}
